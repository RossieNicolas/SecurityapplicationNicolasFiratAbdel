{"version":3,"sources":["components/Main.js","components/Form.js","components/APIform.js","components/APIResults.js","components/Contact.js","components/NotFound.js","Auth.js","components/Callback.js","components/Admin.js","App.js","serviceWorker.js","index.js"],"names":["Main","react_default","a","createElement","className","this","props","name","href","auth","isAuthenticated","onClick","login","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","Message","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","value","target","alert","preventDefault","localStorage","setItem","onSubmit","type","onChange","APIform","sendNameToAPI","bearertoken","getItem","toString","axios","post","access_token","headers","Access-Control-Allow-Origin","authorization","Content-Type","then","response","console","log","catch","error","Name","request","require","finalResponse","method","url","content-type","body","grant_type","client_id","client_secret","audience","redirectUri","json","Error","APIResults","componentDidMount","get","res","i","data","length","concat","toConsumableArray","err","Contact","Form_Form","APIform_APIform","APIResults_APIResults","title","src","height","width","sandbox","logout","NotFound","Auth","auth0","WebAuth","domain","clientID","responseType","scope","authorize","parseHash","authResults","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","location","hash","pathname","parse","removeItem","Callback","handleAuthentication","Admin","message","App","mainComponent","Main_Main","Contact_Contact","NotFound_NotFound","Callback_Callback","Admin_Admin","Boolean","window","hostname","match","changes","assign","ReactDOM","render","src_App_0","document","getElementById","initialState","replace","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dff0d677.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Main extends Component{\n    render(){\n        return(\n            <div className=\"bg-light\">\n            <p>\n                Welcome to the {this.props.name}\n            </p>\n                <p>\n                    Contact the admin <a href=\"/contact\" className=\"btn btn-outline-primary\">Click here</a>\n                </p>\n                {!this.props.auth.isAuthenticated() &&\n                <div>\n                    <hr/>\n                    Please login first\n                    <hr/>\n                    <button className=\"btn btn-outline-secondary\" onClick={this.props.auth.login}>Login</button>\n                </div>\n                }\n        </div>)\n        }\n}","import React,{Component} from 'react';\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {Message: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        alert('Message submitted to the admin: ' + this.state.value);\n        event.preventDefault();\n        localStorage.setItem(\"message\", this.state.value);\n    }\n\n    render() {\n        return (\n            <div className=\"bg-light\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>\n                            Message:\n                            <input type=\"text\" value={this.state.value} onChange={this.handleChange} className=\"form-control\"/>\n                        </label>\n                    </div>\n                    <br/>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" className=\"btn btn-outline-secondary\" value=\"Submit\" />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class APIform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {Name: ''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        //localStorage.setItem(\"Name\", this.state.value);\r\n        this.sendNameToAPI();\r\n    }\r\n\r\n    getOAuthToken() {\r\n        let request = require(\"request\");\r\n        let finalResponse = 'Bearer ';\r\n        let options = { method: 'POST',\r\n            url: 'https://dev-h1jx91ic.eu.auth0.com/oauth/token',\r\n            headers: { 'content-type': 'application/json' },\r\n            body:\r\n                { grant_type: 'client_credentials',\r\n                    client_id: 'DQ2KDU2LUrlToeXBfMrLAjt26VmzrGzh',\r\n                    client_secret: 'xk8WpRum-bx18NJF_dSpn_FT-LunBoHUNa5466AKT8d-fQXgxmbHJye6zgb9D9yA',\r\n                    audience: 'https://dev-h1jx91ic.eu.auth0.com/api/v2/',\r\n                    redirectUri:\"https://musing-jang-1930f8.netlify.com/callback\"},\r\n            json: true };\r\n\r\n        request(options, function (error, response, body) {\r\n            if (error) throw new Error(error);\r\n\r\n            console.log(body);\r\n            finalResponse += response;\r\n        });\r\n        return finalResponse;\r\n\r\n    }\r\n    sendNameToAPI = () => {\r\n        let bearertoken = localStorage.getItem('access_token').toString();\r\n            axios.post('http://localhost:3000/api/names', {\r\n\r\n            name: this.state.value,\r\n            access_token: localStorage.getItem('access_token')\r\n        },{headers: {\"Access-Control-Allow-Origin\": \"*\",\r\n                    authorization: 'Bearer ' + bearertoken,\r\n                    'Content-Type': 'application/json'}})\r\n            .then(function (response) {\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Fill in your name:\r\n                            <input type=\"text\" value={this.state.value} onChange={this.handleChange}\r\n                                   className=\"form-control\"/>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" className=\"btn btn-outline-secondary\" value=\"Submit\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class APIResults extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {name: []};\r\n    }\r\n    componentDidMount = () => {\r\n        axios.get('http://localhost:3000/api/names').then((res) => {\r\n            for (var i = 0; i < res.data.length; i++) {\r\n                if (localStorage.getItem(\"access_token\") === res.data[i].access_token) {\r\n                    this.setState({\r\n                        name: [...this.state.name, res.data[i].name]\r\n                    });\r\n                }\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <button onClick={this.componentDidMount} className=\"btn btn-outline-secondary\">Result</button>\r\n                <br/>\r\n                <br/>\r\n                <h4>{this.state.name[0]}</h4>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\nimport Form from \"./Form\";\n//import jwtDecode from \"jwt-decode\";\nimport APIform from \"./APIform\";\nimport APIResults from \"./APIResults\";\n\nexport default class Contact extends Component {\n\n    render() {\n        return (\n            <div className=\"bg-light\">\n                <div className=\"container\">\n                    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                        <h2 className=\"navbar-brand mx-auto\">Welcome to the contact page</h2>\n                    </nav>\n                </div>\n                <br/>\n                <br/>\n                <p>Do you want to contact the admin?</p>\n                <div>\n                    <Form/>\n                </div>\n                <hr/>\n                <p>Use the api</p>\n                    <APIform/>\n                    <APIResults/>\n                <hr/>\n                <iframe title=\"random website als frame\" src=\"https://theuselessweb.com\" height=\"300\" width=\"400\" sandbox=\"allow-same-origin allow-scripts allow-popups\">some random website</iframe>\n                <hr/>\n                <p>Go back to the home page <a href=\"/\" className=\"btn btn-outline-primary\">Click here</a></p>\n                <button className=\"btn btn-outline-secondary\" onClick={this.props.auth.logout}>Logout</button>\n                <div className=\"card-footer text-muted mt-2\">\n                    Created by Abdel, Nicolas and Firat for AP.\n                </div>\n            </div>\n\n        )\n    }\n    /*\n    getName(){\n        if(localStorage.getItem(\"Name\")){\n            let name = localStorage.getItem(\"Name\");\n            console.log(jwtDecode(localStorage.getItem(\"id_token\")).given_name);\n            let name = jwtDecode(localStorage.getItem(\"id_token\")).given_name;\n            if (name === undefined) {\n                return \"could not determine your name, please use Google to log in to the application\";\n            }else {\n                return jwtDecode(localStorage.getItem(\"id_token\")).given_name;\n            }\n            return name;\n        } else{\n            return \"could not determine your name, please use Google to log in to the application\";\n        }\n    }*/\n}","import React, {Component} from 'react';\n\nexport default class NotFound extends Component{\n    render(){\n        return(\n            <div className=\"bg-light\">\n                not found!...or not authenticated yet.\n            </div>\n        )\n    }\n\n}","/* eslint no-restricted-globals: 0 */\n\nimport auth0 from 'auth0-js';\nconst LOGIN_SUCCESS_PAGE = \"/contact\";\nconst LOGIN_FAILURE_PAGE = \"/\";\n\nexport default class Auth {\n    auth0 = new  auth0.WebAuth({\n        domain: \"dev-h1jx91ic.eu.auth0.com\",\n        clientID: \"DQ2KDU2LUrlToeXBfMrLAjt26VmzrGzh\",\n        redirectUri:\"https://musing-jang-1930f8.netlify.com/callback\",\n        audience: \"https://dev-h1jx91ic.eu.auth0.com/userinfo\",\n        //audience: \"http://securityapplicationAPapi.com\",\n        responseType: \"token id_token\",\n        scope: \"openid profile read:messages\"\n    })\n    constructor(){\n        this.login = this.login.bind(this);\n    }\n    login(){\n        this.auth0.authorize();\n    }\n    handleAuthentication(){\n        this.auth0.parseHash((err, authResults) =>{\n            if (authResults && authResults.accessToken && authResults.idToken) {\n                let expiresAt = JSON.stringify((authResults.expiresIn) * 1000 + new Date().getTime());\n                localStorage.setItem(\"access_token\", authResults.accessToken);\n                localStorage.setItem(\"id_token\", authResults.idToken);\n                localStorage.setItem(\"expires_at\", expiresAt);\n                location.hash = \"\";\n                location.pathname = LOGIN_SUCCESS_PAGE;\n            }\n            else if (err){\n                location.pathname = LOGIN_FAILURE_PAGE;\n                console.log(err);\n            }\n        });\n    }\n    isAuthenticated(){\n        let expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n        return new Date().getTime() < expiresAt;\n\n    }\n    logout(){\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"id_token\");\n        localStorage.removeItem(\"expires_at\");\n        localStorage.removeItem(\"message\");\n        localStorage.removeItem(\"Name\");\n        location.pathname = LOGIN_FAILURE_PAGE;\n    }\n\n}","import React, {Component} from 'react';\nimport Auth from '../Auth';\n\nexport default class Callback extends Component {\n    componentDidMount(){\n        const auth = new Auth();\n        auth.handleAuthentication();\n    }\n\n    render(){\n        return(\n            <div className=\"bg-light\">\n                Loading...\n            </div>\n        )\n    }\n\n}","import React, {Component} from 'react';\n\nexport default class Admin extends Component{\n    message = \"Something went wrong\";\n    message = localStorage.getItem(\"message\");\n    render(){\n        return(\n            <div className=\"bg-light\">\n                <h2>You are an admin</h2>\n                <p>{this.message}</p>\n                <p>Go back</p>\n                <a className=\"btn btn-outline-primary\" href=\"/contact\">Click here</a>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Main from \"./components/Main\";\nimport Contact from \"./components/Contact\";\nimport NotFound from  \"./components/NotFound\";\nimport Callback from \"./components/Callback\";\nimport Admin from \"./components/Admin\";\n\nclass App extends Component {\n  render() {\n    let mainComponent = \"\";\n    switch (this.props.location) {\n        case \"\":\n          mainComponent = <Main{...this.props}/>;\n          break;\n        case \"contact\":\n          mainComponent = this.props.auth.isAuthenticated() ? <Contact{...this.props}/> : <NotFound/>;\n          break;\n        case \"callback\":\n          mainComponent = <Callback/>;\n          break;\n        case \"admin\":\n            mainComponent = <Admin/>;\n            break;\n        default:\n          mainComponent = <NotFound/>;\n          break;\n\n\n    }\n    return (\n      <div className=\"App\">\n          {mainComponent}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Auth from './Auth';\n\nconst auth = new Auth();\n\nlet state = {};\nwindow.setState = (changes) =>{\n    state = Object.assign({},state,changes);\n    ReactDOM.render(<App {...state}/>, document.getElementById('root'));\n};\n/* eslint no-restricted-globals: 0*/\nlet initialState = {\n    name: \"Security application\",\n    location: location.pathname.replace(/^\\/?|\\$/g,\"\"),\n    auth\n};\nwindow.setState(initialState);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}